load("@ai_formation_hazel//tools:mangling.bzl", "hazel_library", "hazel_workspace")
load("@rules_cc//cc:defs.bzl", "cc_library")
load("@rules_haskell//haskell:defs.bzl", "haskell_library")
load("@toktok//third_party/haskell:packages.bzl", "packages")

PACKAGE_NAME = "double-conversion"

package(features = ["-layering_check"])

cc_library(
    name = "cbits",
    srcs = glob([
        "double-conversion/src/*.cc",
        "double-conversion/src/*.h",
        "include/*.h",
    ]) + ["cbits/hs-double-conversion-embed.cc"],
    copts = [
        "-Iexternal/%s/include" % hazel_workspace(PACKAGE_NAME),
        "-Iexternal/%s/double-conversion/src" % hazel_workspace(PACKAGE_NAME),
        "-Wno-unused",
    ],
)

haskell_library(
    name = PACKAGE_NAME,
    srcs = glob(["Data/**/*.hs"]),
    compiler_flags = [
        "-Wno-deprecations",
        "-Wno-star-is-type",
    ],
    version = packages[PACKAGE_NAME].version,
    visibility = ["//visibility:public"],
    deps = [
        ":cbits",
        hazel_library("base"),
        hazel_library("bytestring"),
        hazel_library("ghc-prim"),
        hazel_library("text"),
    ],
)
