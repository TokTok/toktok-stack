load("@ai_formation_hazel//tools:mangling.bzl", "hazel_library")
load("@rules_cc//cc:defs.bzl", "cc_library")
load("@rules_haskell//haskell:defs.bzl", "haskell_library")
load("@toktok//third_party/haskell:packages.bzl", "packages")

PACKAGE_NAME = "network"

genrule(
    name = "config",
    srcs = [
        "configure",
        "install-sh",
        "config.sub",
        "config.guess",
        "include/HsNet.h",
        "include/HsNetworkConfig.h.in",
    ],
    outs = ["include/HsNetworkConfig.h"],
    cmd = """
        cd `dirname $(location configure)`
        ./configure CC=$(CC)
        DIR=`pwd`
        cd -
        cp $$DIR/include/HsNetworkConfig.h $@
        # XXX: Hack because _GNU_SOURCE doesn't get propagated to hsc2hs.
        sed -i -e 's|#define HAVE_STRUCT_UCRED 1||' $@
    """,
    toolchains = ["@rules_cc//cc:current_cc_toolchain"],
)

cc_library(
    name = "cbits",
    srcs = glob(["cbits/*.c"]),
    hdrs = [
        "include/HsNet.h",
        "include/HsNetDef.h",
        "include/HsNetworkConfig.h",
    ],
    copts = ["-Wno-strict-aliasing"],
    defines = ["_GNU_SOURCE"],
    includes = ["include"],
    deps = [hazel_library("rts")],
)

haskell_library(
    name = PACKAGE_NAME,
    srcs = [
        "Network/Socket/Buffer.hsc",
        "Network/Socket/ByteString/Internal.hs",
        "Network/Socket/ByteString/IO.hsc",
        "Network/Socket/ByteString/IOVec.hsc",
        "Network/Socket/ByteString/Lazy.hs",
        "Network/Socket/ByteString/Lazy/Posix.hs",
        "Network/Socket/ByteString/MsgHdr.hsc",
        "Network/Socket/ByteString.hs",
        "Network/Socket/Cbits.hsc",
        "Network/Socket/Fcntl.hs",
        "Network/Socket/Handle.hs",
        "Network/Socket/If.hs",
        "Network/Socket/Imports.hs",
        "Network/Socket/Info.hsc",
        "Network/Socket/Internal.hs",
        "Network/Socket/Name.hs",
        "Network/Socket/Options.hsc",
        "Network/Socket/Shutdown.hs",
        "Network/Socket/SockAddr.hs",
        "Network/Socket/Syscall.hs",
        "Network/Socket/Types.hsc",
        "Network/Socket/Unix.hsc",
        "Network/Socket.hs",
    ],
    compiler_flags = [
        "-Wno-overlapping-patterns",
        "-Wno-unused-imports",
        "-Wno-unused-matches",
        "-XCPP",
        # XXX: Hack because for some reason it doesn't end up being defined.
        "-DCALLCONV=ccall",
    ],
    version = packages[PACKAGE_NAME].version,
    visibility = ["//visibility:public"],
    deps = [
        ":cbits",
        hazel_library("base"),
        hazel_library("bytestring"),
        hazel_library("deepseq"),
    ],
)
