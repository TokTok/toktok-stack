load("@rules_haskell//haskell:defs.bzl", "haskell_toolchain_library")

package(default_visibility = ["//visibility:public"])

licenses(["notice"])

# haskell_toolchain_library can access builtin GHC packages
# and assign them a bazel target name, so that they
# can be referenced as dependencies.
[haskell_toolchain_library(
    name = name,
    tags = ["no-cross"],
) for name in [
    "aeson",
    "aeson-pretty",
    "ansi-wl-pprint",
    "array",
    "async",
    "base",
    "base16-bytestring",
    "binary",
    "binary-conduit",
    "brick",
    "bytestring",
    "case-insensitive",
    "casing",
    "clock",
    "conduit",
    "conduit-extra",
    "containers",
    "cryptohash",
    "data-binary-ieee754",
    "data-default-class",
    "data-fix",
    "deepseq",
    "Diff",
    "directory",
    "edit-distance",
    "entropy",
    "exceptions",
    "expiring-cache-map",
    "extra",
    "filepath",
    "generic-arbitrary",
    "github",
    "groom",
    "hashable",
    "hspec",
    "html",
    "http-client",
    "http-client-tls",
    "http-media",
    "http-types",
    "integer-gmp",
    "iproute",
    "language-c",
    "lens-family",
    "microlens",
    "microlens-mtl",
    "microlens-th",
    "monad-control",
    "monad-parallel",
    "MonadRandom",
    "monad-validate",
    "mtl",
    "network",
    "parallel",
    "pretty",
    "process",
    "QuickCheck",
    "quickcheck-instances",
    "quickcheck-text",
    "random",
    "recursion-schemes",
    "rts",
    "saltine",
    "servant",
    "servant-server",
    "split",
    "suspend",
    "tabular",
    "text",
    "text-zipper",
    "time",
    "timers",
    "transformers",
    "transformers-compat",
    "unix",
    "unliftio-core",
    "unordered-containers",
    "uuid",
    "vector",
    "vty",
    "wai",
    "wai-cors",
    "wai-extra",
    "warp",
    "word-wrap",
]]
