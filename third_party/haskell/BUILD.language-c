load("@ai_formation_hazel//tools:mangling.bzl", "hazel_library")
load("@rules_haskell//haskell:defs.bzl", "haskell_library")
load("@toktok//third_party/haskell:packages.bzl", "packages")
load("@toktok//third_party/haskell/alex:build_defs.bzl", "alex_lexer")
load("@toktok//third_party/haskell/happy:build_defs.bzl", "happy_parser")

PACKAGE_NAME = "language-c"

alex_lexer(
    name = "Lexer",
    src = "src/Language/C/Parser/Lexer.x",
)

happy_parser(
    name = "Parser",
    src = "src/Language/C/Parser/Parser.y",
)

haskell_library(
    name = PACKAGE_NAME,
    srcs = glob([
        "src/**/*.hs*",
    ]) + [
        ":Parser",
        ":Lexer",
    ],
    compiler_flags = [
        "-Wno-incomplete-patterns",
        "-Wno-unused-imports",
        "-Wno-unused-matches",
        "-XDeriveGeneric",
        "-Wno-missing-home-modules",
    ],
    src_strip_prefix = "src",
    version = packages[PACKAGE_NAME].version,
    visibility = ["//visibility:public"],
    deps = [
        hazel_library("array"),
        hazel_library("base"),
        hazel_library("bytestring"),
        hazel_library("containers"),
        hazel_library("deepseq"),
        hazel_library("directory"),
        hazel_library("filepath"),
        hazel_library("pretty"),
        hazel_library("process"),
        hazel_library("syb"),
    ],
)
