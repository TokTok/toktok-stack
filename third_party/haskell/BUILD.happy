load("@ai_formation_hazel//tools:mangling.bzl", "hazel_library")
load("@rules_haskell//haskell:defs.bzl", "haskell_binary")
load("@toktok//third_party/haskell:packages.bzl", "packages")

package(features = ["-layering_check"])

genrule(
    name = "paths",
    outs = ["Paths_happy.hs"],
    cmd = """
    cat > $@ <<EOF
module Paths_happy where

import Data.Version (Version, makeVersion)

version :: Version
version = makeVersion %s

getDataDir :: IO FilePath
getDataDir = return ""
EOF
    """ % str([int(v) for v in packages["happy"].version.split(".")]),
)

haskell_binary(
    name = "happy_bin",
    srcs = glob(["src/**/*.*hs"]) + [":paths"],
    compiler_flags = [
        "-DMIN_VERSION_base(a,b,c)=1",
        "-XCPP",
        "-XFlexibleContexts",
        "-XHaskell98",
        "-XMagicHash",
        "-Wno-incomplete-uni-patterns",
        "-Wno-star-is-type",
    ],
    src_strip_prefix = "src",
    visibility = ["//visibility:public"],
    deps = [
        hazel_library("array"),
        hazel_library("base"),
        hazel_library("containers"),
        hazel_library("mtl"),
    ],
)

alias(
    name = "happy",
    actual = ":happy_bin",
    visibility = ["@toktok//third_party/haskell:__pkg__"],
)
