load("@ai_formation_hazel//tools:mangling.bzl", "hazel_library")
load("@rules_cc//cc:defs.bzl", "cc_library")
load("@rules_haskell//haskell:defs.bzl", "haskell_library")
load("@toktok//third_party/haskell:packages.bzl", "packages")

PACKAGE_NAME = "unliftio"

package(features = ["-layering_check"])

cc_library(
    name = "cbits",
    srcs = [
        "cbits/file-posix.c",
        "cbits/time-posix.c",
    ],
    copts = ["-D_POSIX_C_SOURCE=200809L"],
)

haskell_library(
    name = PACKAGE_NAME,
    srcs = glob(["src/**/*.*hs"]),
    compiler_flags = [
        "-Wno-missing-signatures",
        "-Wno-noncanonical-monoid-instances",
        "-Wno-unused-imports",
    ],
    src_strip_prefix = "src",
    version = packages[PACKAGE_NAME].version,
    visibility = ["//visibility:public"],
    deps = [
        ":cbits",
        hazel_library("async"),
        hazel_library("base"),
        hazel_library("bytestring"),
        hazel_library("deepseq"),
        hazel_library("directory"),
        hazel_library("filepath"),
        hazel_library("nats"),
        hazel_library("process"),
        hazel_library("safe-exceptions"),
        hazel_library("stm"),
        hazel_library("time"),
        hazel_library("transformers"),
        hazel_library("unix"),
        hazel_library("unliftio-core"),
    ],
)
