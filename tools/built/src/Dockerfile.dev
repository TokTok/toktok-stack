# Dev container base image.
#
# Individual devs can create their own images based on this one. This image
# contains a few basic tools and has built and ran all the tests once, so the
# results are cached. This is the quickest way to get started with TokTok
# development.
FROM toxchat/toktok-stack:latest-fastbuild

# Install our wrapper for lhs support in stylish-haskell.
#RUN mv /usr/bin/stylish-haskell /usr/bin/stylish-haskell.distrib \
# && ln -s /src/workspace/ci-tools/bin/stylish-haskell-lhs /usr/bin/stylish-haskell

ENV USER=builder

RUN sudo nix-daemon --daemon & sleep 1 \
 && nix-channel --add https://github.com/NixOS/nixpkgs/archive/refs/tags/23.05.tar.gz nixpkgs \
 && nix-channel --add https://github.com/nix-community/home-manager/archive/release-23.05.tar.gz home-manager \
 && nix-channel --update \
 && nix-shell '<home-manager>' -A install

# Add default configs and dotfiles.
COPY --chown=builder:users tools/built/src/home /home/builder/
RUN sudo nix-daemon --daemon & sleep 1 \
 && nix-shell -p home-manager --run "home-manager switch"

# Prepare builder's home with toxcore's astylerc and TokTok's home.nix.
RUN ["ln", "-sf", "/src/workspace/c-toxcore/other/astyle/astylerc", "/home/builder/.astylerc"]
RUN ["ln", "-sf", "/src/workspace/tools/built/src/home/.config/home-manager/home.nix", "/home/builder/.config/home-manager/home.nix"]

# Disable layering check for compdb generation.
COPY tools/built/src/bazel-nomodules /src/workspace/tools/built/src/
ENV BAZEL_COMPDB_BAZEL_PATH=bazel-nomodules

# For local development: the setup script might have changed and is an
# extension of the Dockerfile, so we copy it here. On CI builds, they are
# the same file.
COPY tools/built/src/setup-dev.sh /src/workspace/tools/built/src/
RUN ["/src/workspace/tools/built/src/setup-dev.sh"]

VOLUME [ "/sys/fs/cgroup" ]
EXPOSE 22/tcp

# vim:ft=dockerfile
