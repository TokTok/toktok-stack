# Dev container base image.
#
# Individual devs can create their own images based on this one. This image
# contains a few basic tools and has built and ran all the tests once, so the
# results are cached. This is the quickest way to get started with TokTok
# development.
FROM toxchat/toktok-stack:latest-fastbuild

USER root

# Install some common dev tools. We need cmake for the YCM build below. We
# also install an SSH server so we can connect to our dev container.
RUN apt-get update && apt-get install -y --no-install-recommends \
 cmake \
 dumb-init \
 gnupg \
 less \
 locales \
 mypy \
 netcat \
 openssh-server \
 patch \
 screen \
 vim \
 zsh \
 && apt-get clean

RUN usermod -s /usr/bin/zsh builder \
 && locale-gen en_US.UTF-8 \
 && update-locale LANG=en_US.UTF-8

# Install ibazel for quick rebuilds.
RUN wget -q https://github.com/bazelbuild/bazel-watcher/releases/download/v0.15.10/ibazel_linux_amd64 \
 && install -o root -g root -m 755 ibazel_linux_amd64 /usr/local/bin/ibazel \
 && rm -f ibazel_linux_amd64

USER builder

# Build YCM before everything else, because this one doesn't change much and
# takes a while to compile.
RUN git clone --jobs=8 --depth=1 --recurse-submodules --shallow-submodules https://github.com/ycm-core/YouCompleteMe ~/.vim/bundle/YouCompleteMe \
 && cd ~/.vim/bundle/YouCompleteMe && python3 install.py --clangd-completer

# Prepare builder's home with oh-my-zsh.
RUN sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" \
 && sed -i -e 's/^ZSH_THEME=.*/ZSH_THEME="cypher"/' "$HOME/.zshrc" \
 && echo "cd /src/workspace" >> "$HOME/.zprofile"

# Build everything in default (fastbuild) mode. Use remote here in the initial
# build, but not later when `builder` is interactively working. "remote" is set
# in the base -fastbuild image.
#
# Run tests afterwards, because those can be retried, while the build must
# succeed first time. We exclude ToxCryptoImplTest because it times out in
# unoptimised builds.
COPY --chown=builder:users setup-dev.sh /home/builder
COPY bazel-nomodules /usr/local/bin/
ENV BAZEL_COMPDB_BAZEL_PATH=bazel-nomodules
RUN /home/builder/setup-dev.sh

# vim:ft=dockerfile
