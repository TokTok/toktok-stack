---
name: docker

# docker-release and kythe run on pull request and push. The other docker builds
# only run on push, as they take a long time and we're confident enough that
# everything works for a pull request if the full release build works and tests
# pass globally.
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  kythe:
    if: github.event_name == 'push' || contains(github.event.pull_request.title, 'chore(deps)')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build Kythe tables
        run: make build-kythe
      - name: Login to DockerHub
        if: github.event_name == 'push'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push Kythe image to DockerHub
        if: github.event_name == 'push'
        run: make push-kythe

  docker-base:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Pull latest toktok-stack image
        run: docker pull toxchat/toktok-stack:latest
      - name: Build toktok-stack base image
        run: make build-workspace
      - name: Login to DockerHub
        if: github.event_name == 'push'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push base image to DockerHub
        if: github.event_name == 'push'
        run: make push-workspace
      - name: Upload base image
        uses: ishworkh/docker-image-artifact-upload@v1
        with:
          image: 'toxchat/toktok-stack:latest'

      - name: Build //third_party in release mode
        if: github.event_name == 'push' || contains(github.event.pull_request.title, 'chore(deps)')
        run: make -C tools/built build-release
      - name: Build and test the whole toktok-stack in release mode
        if: github.event_name == 'pull_request' && contains(github.event.pull_request.title, 'chore(deps)')
        run: tools/built/bazel_test release
      - name: Push release image to DockerHub
        if: github.event_name == 'push'
        run: make -C tools/built push-release

  docker-release:
    runs-on: ubuntu-latest
    needs: docker-base
    if: github.event_name == 'push' || contains(github.event.pull_request.title, 'chore(deps)')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download base image
        uses: ishworkh/docker-image-artifact-download@v1
        with:
          image: 'toxchat/toktok-stack:latest'
      - name: Build //third_party in release mode
        run: make -C tools/built build-release
      - name: Build and test the whole toktok-stack in release mode
        if: github.event_name == 'pull_request'
        run: tools/built/bazel_test release
      - name: Login to DockerHub
        if: github.event_name == 'push'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push release image to DockerHub
        if: github.event_name == 'push'
        run: make -C tools/built push-release

  docker-debug:
    runs-on: ubuntu-latest
    needs: docker-base
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build //third_party in debug mode
        run: make -C tools/built build-debug
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push debug image to DockerHub
        run: make -C tools/built push-debug

  docker-asan:
    runs-on: ubuntu-latest
    needs: docker-base
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build //third_party in asan mode
        run: make -C tools/built build-asan
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push asan image to DockerHub
        run: make -C tools/built push-asan

  docker-msan:
    runs-on: ubuntu-latest
    needs: docker-base
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build //third_party in msan mode
        run: make -C tools/built build-msan
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push msan image to DockerHub
        run: make -C tools/built push-msan

  docker-tsan:
    runs-on: ubuntu-latest
    needs: docker-base
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build //third_party in tsan mode
        run: make -C tools/built build-tsan
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push tsan image to DockerHub
        run: make -C tools/built push-tsan
